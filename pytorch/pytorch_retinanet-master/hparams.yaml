# ================================================================= #
# CONFIG FILE TO INSTANTIATE THE LIGHTNING MODEL :
# ================================================================= #

# ============================================================== #
# RETINANET MODEL PARAMETERS
# ============================================================== #
# set the parameters to be passed on to the retianet mode here
# NOTE: the full set of arguments can be found in `retinanet/config.py` .
model:
  backbone_kind: resnet18 # backbone of the model
  num_classes: 90 # number of classes (excluding the background class)
  freeze_bn: true # wether to freeze the backone of the model
  min_size: 640 # Size of the smallest side of the image during training
  max_size: 1024 #Size of the Maximum size of the image during training
  pretrained: true #Loads in pretrained-imagenet weights for backbone

# ============================================================== #
# DATASETS AND DATALOADERS :
# ============================================================== #
# the dataset format can be of three types : 1. coco   2.pascal   3.csv ,
# as described in the the README.md file
# set the type of dataset that is to be used in the `kind` argument.

# NOTE: valid_paths is Optional but test_paths, trn_paths is required for
# "pascal" and "csv" dataset.

# NOTE: if validation data is not available then set the `valid_paths` argument
# to be false this will then use
dataset:
  kind: pascal
  root_dir: false
  trn_paths:
      - /home/markpp/datasets/VOCdevkit/VOC2012/Annotations/
      - /home/markpp/datasets/VOCdevkit/VOC2012/JPEGImages/
  test_paths:
      - /home/markpp/datasets/VOCdevkit/VOC2012/Annotations/
      - /home/markpp/datasets/VOCdevkit/VOC2012/JPEGImages/
  valid_paths: false

# paramters for the pytroch DataLoader
dataloader:
  # Batch sizes
  train_bs: 2
  valid_bs: 2
  test_bs: 2
  args:
    # extra arguments to be passed to the dataloaders
    num_workers: 0
    pin_memory: False

# =========================================================================
# Albumentation transformations to use for the pascal or csv dataset
# =========================================================================
# NOTE: these transformations are only supported for the dataset that is the
# specified csv format or for pascal dataset format
# These transformations are applied to the train dataset only
# no augmentation is applied to test, validation datasets
transforms:
  - class_name: albumentations.HorizontalFlip
    params:
      p: 0.5

# =========================================================================
# OPTIMIZER AND SCHEDULER
# =========================================================================
optimizer:
  class_name: torch.optim.SGD
  params:
    lr: 0.001
    weight_decay: 0.001
    momentum: 0.9

# NOTE: for the format of the scheduler supported in pytorch lightning
# check : https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
# set scheduler.class_name == None to not use any schduler
scheduler:
  class_name: torch.optim.lr_scheduler.ReduceLROnPlateau
  params:
    mode: min
    factor: 0.1
    patience: 5
    verbose: true
  interval: epoch # (or step)
  frequency: 1
  monitor: val_loss # (or false)
